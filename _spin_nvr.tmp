never a {    /* !(<> ((x!=10))) */
accept_init:
T0_init:
	do
	:: (! (((x!=10)))) -> goto T0_init
	od;
}
never b {    /* !(! (<> ([] (((x%2)==1))))) */
T0_init:
	do
	:: ((((x%2)==1))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: ((((x%2)==1))) -> goto accept_S4
	od;
}
never c {    /* !(! ([] (<> (((x%2)==1))))) */
T0_init:
	do
	:: ((((x%2)==1))) -> goto accept_S9
	:: (1) -> goto T0_init
	od;
accept_S9:
	do
	:: (1) -> goto T0_init
	od;
}
never d {    /* !([] ((y<=x))) */
T0_init:
	do
	:: atomic { (! (((y<=x)))) -> assert(!(! (((y<=x))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never e {    /* !([] ((! ((y!=x))) || (<> ((y==x))))) */
T0_init:
	do
	:: (! ((! ((y!=x)))) && ! (((y==x)))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! (((y==x)))) -> goto accept_S4
	od;
}
